// <auto-generated />
using System;
using Data_Access_Layer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CMS.Data.Migrations
{
    [DbContext(typeof(CMSDbContext))]
    [Migration("20240701034418_DiscardedMenuList")]
    partial class DiscardedMenuList
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CMS.Data.Entities.AppActivityLog", b =>
                {
                    b.Property<string>("ActionName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime>("ModifiedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("Value")
                        .HasColumnType("datetime2");

                    b.HasKey("ActionName");

                    b.ToTable("AppActivityLog");
                });

            modelBuilder.Entity("CMS.Data.Entities.NotificationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime>("ModifiedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("NotificationType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "NewFoodItemAdded"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "FoodItemRemoved"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "FoodItemPriceUpdated"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "FoodItemAvailabilityUpdated"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "FoodItemVoting"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "FinalMenu"
                        });
                });

            modelBuilder.Entity("Data_Access_Layer.Entities.FoodItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<int>("FoodItemTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SentimentScore")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FoodItemTypeId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("StatusId");

                    b.ToTable("FoodItem");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 1,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Samosa",
                            Price = 50m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 1,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pakora",
                            Price = 55m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 1,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Aloo Tikki",
                            Price = 60m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 1,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Paneer Tikka",
                            Price = 95m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 1,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Bhel Puri",
                            Price = 50m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 2,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kachumber Salad",
                            Price = 60m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 7,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 2,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Green Salad",
                            Price = 50m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 8,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 2,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sprout Salad",
                            Price = 65m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 9,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 2,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Chickpea Salad",
                            Price = 70m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 10,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 2,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cucumber Raita",
                            Price = 55m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 11,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 3,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Vegetable Sandwich",
                            Price = 75m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 12,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 3,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Paneer Sandwich",
                            Price = 85m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 13,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 3,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Chicken Sandwich",
                            Price = 90m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 14,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 3,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Egg Sandwich",
                            Price = 80m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 15,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 3,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cheese Sandwich",
                            Price = 85m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 16,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 4,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Chole Rice",
                            Price = 150m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 17,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 4,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Rajma Rice",
                            Price = 130m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 18,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 4,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Paneer Roti",
                            Price = 100m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 19,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 4,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Chole Bhature",
                            Price = 110m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 20,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 4,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Biryani",
                            Price = 120m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 21,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 5,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Gulab Jamun",
                            Price = 50m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 22,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 5,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Rasgulla",
                            Price = 60m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 23,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 5,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Jalebi",
                            Price = 55m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 24,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 5,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kheer",
                            Price = 65m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 25,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 5,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Halwa",
                            Price = 70m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 26,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 6,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Masala Chai",
                            Price = 30m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 27,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 6,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Lassi",
                            Price = 40m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 28,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 6,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nimbu Pani",
                            Price = 35m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 29,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 6,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mango Shake",
                            Price = 50m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 30,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 6,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Coconut Water",
                            Price = 45m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 33,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 4,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mixed Veg Roti",
                            Price = 150m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 34,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 4,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kadhi Rice",
                            Price = 120m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 35,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 4,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Masoor Dal Rice",
                            Price = 110m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 36,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 4,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Chicken Curry Rice",
                            Price = 180m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 37,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 4,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Egg Curry Rice",
                            Price = 160m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 38,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 4,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dal Roti",
                            Price = 100m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 39,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 4,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mutton Biryani",
                            Price = 100m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 40,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 4,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Fish Curry Rice",
                            Price = 190m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 41,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 4,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mutton Curry Rice",
                            Price = 220m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 42,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 4,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Vegetable Pulao",
                            Price = 130m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 43,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 4,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Aloo Gobi Roti",
                            Price = 120m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 44,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 4,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Baingan Bharta Roti",
                            Price = 130m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 45,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 4,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Palak Paneer Roti",
                            Price = 150m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 46,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 4,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sambar Rice",
                            Price = 100m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 47,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 4,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Aloo Matar Roti",
                            Price = 120m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 48,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 4,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Gobi Masala Roti",
                            Price = 140m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 49,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 4,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Paneer Bhurji Roti",
                            Price = 160m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 50,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 4,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Chicken Biryani",
                            Price = 200m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 51,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 4,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Aloo Paratha",
                            Price = 110m,
                            SentimentScore = 0m,
                            StatusId = 2
                        },
                        new
                        {
                            Id = 52,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodItemTypeId = 4,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Bhindi Roti",
                            Price = 140m,
                            SentimentScore = 0m,
                            StatusId = 2
                        });
                });

            modelBuilder.Entity("Data_Access_Layer.Entities.FoodItemAvailabilityStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime>("ModifiedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("FoodItemAvailabilityStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OutOfStock"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Available"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OnHold"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Unavailable"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Discarded"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Removed"
                        });
                });

            modelBuilder.Entity("Data_Access_Layer.Entities.FoodItemFeedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int>("FoodItemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FoodItemId");

                    b.HasIndex("UserId");

                    b.ToTable("FoodItemFeedback");
                });

            modelBuilder.Entity("Data_Access_Layer.Entities.FoodItemType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime>("ModifiedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("FoodItemType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Appetizers"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Salads"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sandwiches"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MainCourses"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Desserts"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Beverages"
                        });
                });

            modelBuilder.Entity("Data_Access_Layer.Entities.MealType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime>("ModifiedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("MealType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Breakfast"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Lunch"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dinner"
                        });
                });

            modelBuilder.Entity("Data_Access_Layer.Entities.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime>("ModifiedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int>("NotificationTypeId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NotificationTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("Data_Access_Layer.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime>("ModifiedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Chef"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Employee"
                        });
                });

            modelBuilder.Entity("Data_Access_Layer.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(320)");

                    b.Property<bool>("HasVotedToday")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("char(60)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("char(30)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin1@example.com",
                            HasVotedToday = false,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Admin",
                            Password = "wFjBAs2TycIyp0YczBePjqnb4bdcZHVqA183EbZ/lcg=",
                            RoleId = 1,
                            Salt = "h0482lqEHWB2XsBC0XibYQ=="
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin2@example.com",
                            HasVotedToday = false,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Admin",
                            Password = "kYtXoaGSd69AEjjnmm0+cUExK890domuQuui+jDg6GA=",
                            RoleId = 1,
                            Salt = "gMOuyH8MnaGz6THTGqThtA=="
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin3@example.com",
                            HasVotedToday = false,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Admin",
                            Password = "f4n2NV7fMPc/b0U4+IG/Wuj1LIBIvjaDOZPaCvu55bk=",
                            RoleId = 1,
                            Salt = "KD3tYTATY8wi5nCC2UtJrA=="
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user1@example.com",
                            HasVotedToday = false,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Radhika",
                            Password = "mRKKBJbxIe09CATLRECbHZg9f03rLpLesn9T5okdkLo=",
                            RoleId = 3,
                            Salt = "URvqTRvzbShWWqLH8NMaxQ=="
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user2@example.com",
                            HasVotedToday = false,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Raghvendra",
                            Password = "nPrH6EHYnBAJkfrg+QVaI5EelJFdnnwHc/j2D5yfhOg=",
                            RoleId = 3,
                            Salt = "gLGy0Yqgm2Bcpn7Wi54YFQ=="
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user3@example.com",
                            HasVotedToday = false,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Rakshita",
                            Password = "XIEv0RhGZ8EzbAMLmGedO15qkQRmXVPE7PW9QxtVewk=",
                            RoleId = 3,
                            Salt = "D8/J38MEXPQ7wvgTFKXV/Q=="
                        },
                        new
                        {
                            Id = 7,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user4@example.com",
                            HasVotedToday = false,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mukul",
                            Password = "nsnFeec+euamxC1RnwjnqoPKlWf1xeta+YA+f4QWqzI=",
                            RoleId = 3,
                            Salt = "fnzubQzINBanSmQZR26+8A=="
                        },
                        new
                        {
                            Id = 8,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "chef1@example.com",
                            HasVotedToday = false,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Amit",
                            Password = "GJaMJo5HnXHlHqtcgsYEhSeDcpu1HinTYe2Bkho7oGM=",
                            RoleId = 2,
                            Salt = "yNbFaoDrOSRuxU/J4um5kg=="
                        },
                        new
                        {
                            Id = 9,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "chef2@example.com",
                            HasVotedToday = false,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ashit",
                            Password = "WvmI4IQ9/SjX5N/AQZFDRkhJSuO/KGCXJMgdHNunLJc=",
                            RoleId = 2,
                            Salt = "ojoS/bjqhds+SyO9N1vLqA=="
                        },
                        new
                        {
                            Id = 10,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "chef3@example.com",
                            HasVotedToday = false,
                            ModifiedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ankit",
                            Password = "kYWN5pyzOAtqkStB1BBcO48wXl1fGccYXjWfa7MpnPU=",
                            RoleId = 2,
                            Salt = "PORGlTIpHz/WyGdCBOKGYQ=="
                        });
                });

            modelBuilder.Entity("Data_Access_Layer.Entities.WeeklyMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int>("FoodItemId")
                        .HasColumnType("int");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<int>("MealTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int>("NumberOfVotes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FoodItemId");

                    b.HasIndex("MealTypeId");

                    b.ToTable("WeeklyMenu");
                });

            modelBuilder.Entity("Data_Access_Layer.Entities.FoodItem", b =>
                {
                    b.HasOne("Data_Access_Layer.Entities.FoodItemType", "FoodItemType")
                        .WithMany("FoodItem")
                        .HasForeignKey("FoodItemTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_Access_Layer.Entities.FoodItemAvailabilityStatus", "FoodItemAvailabilityStatus")
                        .WithMany("FoodItem")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FoodItemAvailabilityStatus");

                    b.Navigation("FoodItemType");
                });

            modelBuilder.Entity("Data_Access_Layer.Entities.FoodItemFeedback", b =>
                {
                    b.HasOne("Data_Access_Layer.Entities.FoodItem", "FoodItem")
                        .WithMany("FoodItemFeedback")
                        .HasForeignKey("FoodItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_Access_Layer.Entities.User", "User")
                        .WithMany("FoodItemFeedback")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FoodItem");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data_Access_Layer.Entities.Notification", b =>
                {
                    b.HasOne("CMS.Data.Entities.NotificationType", "NotificationType")
                        .WithMany("Notification")
                        .HasForeignKey("NotificationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_Access_Layer.Entities.User", "User")
                        .WithMany("Notification")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NotificationType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data_Access_Layer.Entities.User", b =>
                {
                    b.HasOne("Data_Access_Layer.Entities.Role", "Role")
                        .WithMany("User")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Data_Access_Layer.Entities.WeeklyMenu", b =>
                {
                    b.HasOne("Data_Access_Layer.Entities.FoodItem", "FoodItem")
                        .WithMany("WeeklyMenu")
                        .HasForeignKey("FoodItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_Access_Layer.Entities.MealType", "MealType")
                        .WithMany("WeeklyMenu")
                        .HasForeignKey("MealTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FoodItem");

                    b.Navigation("MealType");
                });

            modelBuilder.Entity("CMS.Data.Entities.NotificationType", b =>
                {
                    b.Navigation("Notification");
                });

            modelBuilder.Entity("Data_Access_Layer.Entities.FoodItem", b =>
                {
                    b.Navigation("FoodItemFeedback");

                    b.Navigation("WeeklyMenu");
                });

            modelBuilder.Entity("Data_Access_Layer.Entities.FoodItemAvailabilityStatus", b =>
                {
                    b.Navigation("FoodItem");
                });

            modelBuilder.Entity("Data_Access_Layer.Entities.FoodItemType", b =>
                {
                    b.Navigation("FoodItem");
                });

            modelBuilder.Entity("Data_Access_Layer.Entities.MealType", b =>
                {
                    b.Navigation("WeeklyMenu");
                });

            modelBuilder.Entity("Data_Access_Layer.Entities.Role", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("Data_Access_Layer.Entities.User", b =>
                {
                    b.Navigation("FoodItemFeedback");

                    b.Navigation("Notification");
                });
#pragma warning restore 612, 618
        }
    }
}
